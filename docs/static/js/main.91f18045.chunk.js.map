{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","id","onSubmit","e","preventDefault","trim","length","cat","alertify","error","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,GAAG,kBAAkBC,SAZV,SAACC,GAClBA,EAAEC,iBACEL,EAAWM,OAAOC,QAAU,GAC5BT,GAAc,SAAAU,GAAG,MAAI,CAACR,MACtBC,EAAc,KAEdQ,IAASC,MAAM,iBAMnB,SACI,uBACIC,KAAK,OACLC,MAAOZ,EACPa,SApBc,SAACT,GACvBH,EAAcG,EAAEU,OAAOF,QAoBfG,YAAY,8B,8BC7BfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YACpB,CACGzB,GAAIyB,EAAIzB,GACR0B,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QATvB,kBAaZM,GAbY,4CAAH,sDCEPM,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAEhC,OACI,qBAAKa,UAAU,yCAAf,SACI,qBAAKC,IAAKd,EAAKe,IAAKN,OCDnBO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZlB,mBAAS,CAC/ByB,KAAM,GACNY,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPvB,EAAQC,GACHuB,MAAK,SAAAb,GACFW,EAAS,CACLd,KAAMG,EACNS,SAAS,SAGtB,CAACnB,IAEGoB,EDb0BI,CAAaxB,GAAjCY,EAFsB,EAE3BL,KAAaY,EAFc,EAEdA,QACrB,OACI,qCACI,oBAAIJ,UAAU,mDAAd,SAAmEf,IACjEmB,GAAW,mBAAGJ,UAAU,mCAAb,yBACb,sBAAKA,UAAU,YAAf,UAI2B,IAAlBH,EAAOtB,QAAiB,mBAAGyB,UAAU,mCAAb,+BAIzBH,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIzB,cElBxBwC,EAAe,WAAK,IAAD,EAEQ3C,mBAAS,CAAC,WAFlB,mBAErB4C,EAFqB,KAET7C,EAFS,KAI5B,OACI,qCACI,oBAAIkC,UAAU,aAAd,uBACA,cAAC,EAAD,CAAalC,cAAeA,IAE5B,uBAEA,6BAEQ6C,EAAWjB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCdjC2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.91f18045.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nimport alertify from 'alertifyjs';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length >= 1){\n            setCategories(cat => [inputValue]);\n            setinputValue('');\n        }else{\n            alertify.error('Ingrese dato');\n        }\n        \n    }\n\n    return (\n        <form id=\"formularioAnime\" onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                placeholder=\"Realice su búsqueda\"\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=50&api_key=kyhPYTiwhQpImN42N6NFDW9rKJRSsbDD`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => \n        ({\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        })\n    );\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            {/* <p>{title}</p> */}\n        </div>\n    )\n}\n","\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\n\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n    return (\n        <>\n            <h3 className=\"tituloGridItem animate__animated animate__fadeIn\">{ category }</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading ...</p>}\n            <div className=\"card-grid\">\n                \n                {\n\n                    (images.length === 0) && <p className=\"animate__animated animate__flash\">No hay resultados</p>\n                }\n                \n                {\n                    images.map(img=>(\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs(category)\n            .then(img => {\n                setstate({\n                    data: img,\n                    loading: false\n                })\n            });\n    }, [category]);\n\n    return state;\n\n}","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = ()=>{\n\n    const [categories, setCategories] = useState(['Naruto']);\n\n    return (\n        <>\n            <h2 className=\"tituloGifs\">GIFS V1.0</h2>\n            <AddCategory setCategories={setCategories}/>\n            \n            <hr/>\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid\n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n\n        </>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}